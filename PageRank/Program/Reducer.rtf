{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red100\green100\blue100;\red106\green62\blue62;
\red42\green0\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\b\fs18 \cf2 import
\b0 \cf0  java.io.IOException;\
\

\b \cf2 import
\b0 \cf0  org.apache.hadoop.io.Text;\

\b \cf2 import
\b0 \cf0  org.apache.hadoop.mapreduce.Reducer;\
\

\b \cf2 public
\b0 \cf0  
\b \cf2 class
\b0 \cf0  PageRankReducer 
\b \cf2 extends
\b0 \cf0  Reducer<Text, Text, Text, Text> \{\
\
\pard\pardeftab720
\cf3 @Override\cf0 \
\pard\pardeftab720

\b \cf2 public
\b0 \cf0  
\b \cf2 void
\b0 \cf0  reduce(Text \cf4 key\cf0 , Iterable<Text> \cf4 values\cf0 ,\
    Context \cf4 context\cf0 )\
    
\b \cf2 throws
\b0 \cf0  IOException, InterruptedException \{\
  \
	  
\b \cf2 double
\b0 \cf0  \cf4 sum\cf0  = 0;\
	  String \cf4 sumString\cf0  = String.
\i valueOf
\i0 (\cf4 sum\cf0 );\
	  Text \cf4 sumText\cf0  = 
\b \cf2 new
\b0 \cf0  Text(\cf4 sumString\cf0 );\
	  String \cf4 valString\cf0  = \cf5 ""\cf0 ;\
	  
\b \cf2 double
\b0 \cf0  \cf4 valDouble\cf0  = 0;\
	  Text \cf4 result\cf0  = 
\b \cf2 new
\b0 \cf0  Text(\cf5 "result"\cf0 );\
	  \
	  String \cf4 keyLinks\cf0  =\cf4 key\cf0 .toString();\
	  Text \cf4 keyremaining\cf0  = 
\b \cf2 new
\b0 \cf0  Text(\cf4 keyLinks\cf0 );\
	  \
	  
\b \cf2 for
\b0 \cf0  (Text \cf4 val\cf0  : \cf4 values\cf0 ) \{\
		  		\cf4 valString\cf0  = \cf4 val\cf0 .toString();\
		  		
\b \cf2 if
\b0 \cf0 (\cf4 valString\cf0 .length()>1)\{\
		  			\cf4 valDouble\cf0 = Double.
\i parseDouble
\i0 (\cf4 valString\cf0 );\
			  		\cf4 sum\cf0  += \cf4 valDouble\cf0 ;\
			  		\cf4 sumString\cf0  = String.
\i valueOf
\i0 (\cf4 sum\cf0 );\
			  		\cf4 sumText\cf0 .set(\cf4 sumString\cf0 );\
			  		\cf4 result\cf0 .set(\cf4 sumString\cf0 );\
		  		\}\
		  		
\b \cf2 else
\b0 \cf0 \{\
		  			\cf4 keyLinks\cf0  += (\cf5 " "\cf0 +\cf4 valString\cf0 );\
		  			\cf4 keyremaining\cf0 .set(\cf4 keyLinks\cf0 );		  			\
		  		\}\
	  \}\
	  \cf4 context\cf0 .write(\cf4 keyremaining\cf0 , \cf4 result\cf0 );	  \
\}\
\}}